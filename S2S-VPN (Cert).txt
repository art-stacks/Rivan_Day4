
S2S VPN with Certificate Signature Authentication

_____________________
********************* SETUP VMNETS

VMWare > Edit > Virtual Network Editor

Add/Edit the following VMNets:

VMNet 2, 
	VMNet Info: Host-only
	IP address: 192.168.102.0
	Subnet Mask: 255.255.255.0
	DHCP: Unchecked

VMNet 3, 
	VMNet Info: Host-only
	IP address: 192.168.103.0
	Subnet Mask: 255.255.255.0
	DHCP: Unchecked

VMNet 4, 
	VMNet Info: Host-only
	IP address: 192.168.104.0
	Subnet Mask: 255.255.255.0
	DHCP: Unchecked
	
VMNet 8(NAT)
	VMNet Info: NAT
	IP address: 208.8.8.0
	Subnet Mask: 255.255.255.0
	DHCP: Checked
	
	
_____________________
********************* DEPLOY CSRS AND LINUX

Note the following VM Files:

CSR1000v 17.x = VPN-EDGE
YVM-v6 = BLDG


Deploy 2 CSR1000v

1. VPN-PH
	Name of Virtual Machine: VPN-PH
	Deployment Options: Small
	Bootstrap:
		Router Name: VPN-PH
		Login User: admin
		Login Pass: pass

	Network Adapter: NAT
	Network Adapter 2: VMNet2
	Network Adapter 3: VMNet3
		
2. VPN-JP
	Name of Virtual Machine: VPN-JP
	Deployment Options: Small
	Bootstrap:
		Router Name: VPN-JP
		Login User: admin
		Login Pass: pass

	Network Adapter: NAT
	Network Adapter 2: VMNet2
	Network Adapter 3: VMNet4
	


Deploy 2 YVM-v6

1. BLDG-PH
	Name of Virtual Machine: BLDG-PH
	Network Adapter: VMNet3
	
2. BLDG-JP-1
	Name of Virtual Machine: BLDG-JP-1
	Network Adapter: VMNet4

3. BLDG-JP-2
	Name of Virtual Machine: BLDG-JP-2
	Network Adapter: VMNet4

_____________________
********************* CONFIGURE DEVICES

@VPN-PH
conf t
 hostname VPN-PH
 enable secret pass
 service password-encryption
 no logging cons
 no ip domain lookup
 line vty 0 14
  transport input all
  password pass
  login local
  exec-timeout 0 0
 int g1
  ip add 208.8.8.11 255.255.255.0
  no shut
 int g2
  ip add 192.168.102.11 255.255.255.0
  no shut
 int g3
  ip add 11.11.11.113 255.255.255.224
  no shut
 !
 username admin privilege 15 secret pass
 ip http server
 ip http secure-server
 ip http authentication local
 end
wr


@VPN-JP
conf t
 hostname VPN-JP
 enable secret pass
 service password-encryption
 no logging cons
 no ip domain lookup
 line vty 0 14
  transport input all
  password pass
  login local 
  exec-timeout 0 0
 int g1
  ip add 208.8.8.12 255.255.255.0
  no shut
 int g2
  ip add 192.168.102.12 255.255.255.0
  no shut
 int g3
  ip add 21.21.21.213 255.255.255.240
  ip add 22.22.22.223 255.255.255.192 secondary
  no shut
 !
 username admin privilege 15 secret pass
 ip http server
 ip http secure-server
 ip http authentication local
 end
wr


@BLDG-PH
sudo su
ifconfig eth0 11.11.11.100 netmask 255.255.255.224 up
route add default gw 11.11.11.113
ping 11.11.11.113

@BLDG-JP-1
sudo su
ifconfig eth0 21.21.21.211 netmask 255.255.255.240 up
route add default gw 21.21.21.213
ping 21.21.21.213

@BLDG-JP-2
sudo su
ifconfig eth0 22.22.22.221 netmask 255.255.255.192 up
route add default gw 22.22.22.223
ping 22.22.22.223


_____________________
********************* Deploy CA Server & Issue Certificates

NetOps VM
	NetAdapter: NAT
	NetAdapter 2: VMNet2
	NetAdapter 3: VMNet3
	NetAdapter 4: Bridged (Replicate)

	Login: root
	Pass: C1sc0123
	

1. Set a Persistent Static IP address on Linux (Verify MAC ADDRESS of interface)

nmcli connection add
    type ethernet
    con-name "static-net2"
    ifname ens192 
    ipv4.method manual 
    ipv4.addresses 192.168.102.100/24 
    ipv4.gateway 192.168.102.0/24 
    ipv4.dns "8.8.8.8,8.8.4.4" 
    ipv4.routes "192.168.102.0/24 0.0.0.0" 
    autoconnect yes

!@NetOps
nmcli connection add type ethernet con-name "static-net2" ifname ens192 ipv4.method manual ipv4.addresses 192.168.102.100/24  autoconnect yes
nmcli connection up static-net2

2. Allow Firewall Rule

!@NetOps
firewall-cmd --permanent --zone=public --add-service=http
firewall-cmd --permanent --add-port=3000/tcp
firewall-cmd --reload

or disable firewall(Not Recommended)

!@NetOps
systemctl disable --now firewalld


3. Create User Account

!@NetOps
adduser admin -g wheel
passwd admin
> pass
> pass

cd /home/admin


4. Create a directory for keys and certificates.

!@NetOps
mkdir keystore
cd keystore


3. Create a Private key with a Selfsigned Certificate (SSH keys:ssh-keygen vs TLS/SSL keys:openssl)

!@NetOps
openssl req -x509 -newkey rsa:2048 -days 365 -keyout rivan.key -out ca-rivan.crt -nodes

or 

!@NetOps
ssh-keygen -t rsa -b 2048 -f rivan.key

vs

openssl genpkey -algorithm RSA -out rivan.key -pkeyopt rsa_keygen_bits:2048

openssl req -new -x509 -key rivan.key -out ca-rivan.crt -days 365

Sample Output:
-----
Country Name (2 letter code) [XX]:PH
State or Province Name (full name) []:NCR
Locality Name (eg, city) [Default City]:Makati
Organization Name (eg, company) [Default Company Ltd]:Rivancorp
Organizational Unit Name (eg, section) []:HQ
Common Name (eg, your name or your server's hostname) []:rivan.com
Email Address []:admin@rivancorp.com


Include -subj information so that no prompts appear:

!@NetOps
-subj "/C=PH/ST=NCR/L=Makati/O=Rivancorp/OU=HQ/CN=rivan.com/emailAddress=admin@rivancorp.com" \
-addext "subjectAltName=DNS:rivan.com,DNS:www.rivan.com,IP:192.168.102.100,DNS:software.rivan.com"


or

From a template built-in from openssl /etc/pki/tls/openssl.cnf

/////////
[ req ]
default_bits       = 2048
distinguished_name = req_distinguished_name
x509_extensions    = v3_req
prompt             = no

[ req_distinguished_name ]
C  = PH
ST = Metro Manila
L  = Quezon City
O  = MyOrganization
OU = IT Department
CN = example.com

[ v3_req ]
subjectAltName = @alt_names

[ alt_names ]
DNS.1   = example.com
DNS.2   = www.example.com
DNS.3   = api.example.com
IP.1    = 192.168.1.10
IP.2    = 10.0.0.5
/////////


!@NetOps
openssl req -new -x509 -key rivan.key -out ca-rivan.crt -days 365 \
-config san.cnf -extensions v3_req


Display Certificate Info
!@NetOps
openssl x509 -in ca-rivan.pem -noout -text





4. Generate RSA Key Pair on both routers.

!@VPN-PH, VPN-JP
conf t
 crypto key generate rsa general-keys label rivankeys modulus 2048 exportable
 end



5. Create a trustpoint and import the CA.

!@VPN-PH
conf t
 crypto pki trustpoint rivantrust
  enrollment terminal pem
  hash sha512
  subject-name CN=siteph.rivan.com, C=PH, ST=NCR, L=Makati, O=Rivancorp, OU=SitePH, E=siteph@rivancorp.com
  subject-alt-name siteph.rivan.com
  subject-alt-name ph.rivan.com
  storage unix: 
  primary
  revocation-check none
  rsakeypair rivankeys
  exit
 crypto pki authenticate rivantrust
> Paste the CA


!@VPN-JP
conf t
 crypto pki trustpoint rivantrust
  enrollment terminal pem
  hash sha512
  subject-name CN=siteph.rivan.com, C=JP, ST=Kanto, L=Tokyo, O=Rivancorp, OU=SiteJP, E=sitejp@rivancorp.com
  subject-alt-name sitejp.rivan.com
  subject-alt-name jp.rivan.com
  storage unix: 
  primary
  revocation-check none
  rsakeypair rivankeys
  exit
 crypto pki authenticate rivantrust
> Paste the CA



6. Generate a CSR for both Routers

!@VPN-PH, VPN-JP
crypto pki enroll rivantrust

> Outputs a CSR . Must be signed by the CA



7. Import the CSR to the CA Server (NetOps)

!@NetOps
nano req-ph.pem
> paste VPN-PH's CSR
> ctrl + s (save)
> ctrl + x (exit)


!@NetOps
nano req-jp.pem
> paste VPN-JP's CSR
> ctrl + s (save)
> ctrl + x (exit



8. Sign the CSRs

!@NetOps
openssl x509 -req -in req-ph.pem -CA ca-rivan.pem -CAkey key-rivan.pem -out signed-ph.pem
openssl x509 -req -in req-jp.pem -CA ca-rivan.pem -CAkey key-rivan.pem -out signed-jp.pem

include subject names:
-subj "/C=PH/ST=NCR/L=Makati/O=Rivancorp/OU=SitePH/CN=siteph.rivan.com/emailAddress=siteph@rivancorp.com/subjectAltName=DNS:siteph.rivan.com,DNS:ph.rivan.com,IP:208.8.8.11"
-subj "/C=JP/ST=Kanto/L=Tokyo/O=Rivancorp/OU=SiteJP/CN=sitejp.rivan.com/emailAddress=sitejp@rivancorp.com/subjectAltName=DNS:sitejp.rivan.com,DNS:jp.rivan.com,IP:208.8.8.12"
 
!@NetOps - obtain the signed CSRs
cat signed-rivansitea.pem
cat signed-rivansiteb.pem


6. Import the signed CSRs

!@VPN-PH, VPN-JP
conf t
 crypto pki import rivantrust certificate

> Paste the signed CSR


_____________________
********************* Configure GRE over IPSec via Certificate Authentication

1. GRE Tunnel

!@VPN-PH
conf t
 int tun1
  ip add 172.16.10.1 255.255.255.0
  tunnel source g1
  tunnel destination 208.8.8.12
  tunnel mode gre ip
  end

!@VPN-PH
conf t
 int tun1
  ip add 172.16.10.2 255.255.255.0
  tunnel source g1
  tunnel destination 208.8.8.11
  tunnel mode gre ip
  end


2. Routing Interesting traffic

!@VPN-PH
conf t
 ip route 20.20.20.48 255.255.255.248 172.16.10.2
 end
 
!@VPN-JP
conf t
 ip route 10.10.10.32 255.255.255.224 172.16.10.1
 end


3. Configure ISAKMP Policy

!@VPN-PH, VPN-JP
conf t
 crypto isakmp policy 1
  authentication rsa-sig
  encryption aes 256
  hash sha512
  group 14
  end


4. Configure IPSec Profile

!@VPN-PH, VPN-JP
conf t
 crypto ipsec transform-set IPSECTUNNEL esp-aes 256 esp-sha-hmac
  mode transport
  exit
 crypto ipsec profile RIVAN
  set transform-set IPSECTUNNEL
  set pfs group14
  end


5 Apply IPSec Profile Protection to Tunnel

!@VPN-PH, VPN-JP
conf t
 int tunnel 1
  tunnel protection ipsec profile RIVAN 
  end


_____________________
********************* Verification

!@VPN-PH, VPN-JP
show crypto isakmp sa
show crypto ipsec sa













Other

crypto isakmp key secretkey address 133.33.33.2
